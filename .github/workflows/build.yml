name: Build AugmentCode-Free

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
            ext: .exe
          - os: macos-latest
            platform: macos
            arch: arm64
            ext: ""
          - os: ubuntu-latest
            platform: linux
            arch: x64
            ext: ""

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libglib2.0-0 \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0 \
          libxcb-shape0 \
          libxcb-cursor0 \
          libfontconfig1 \
          libfreetype6 \
          libx11-6 \
          libx11-xcb1 \
          libxext6 \
          libxrender1 \
          libegl1 \
          libxrandr2 \
          libdbus-1-3 \
          libxss1

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onedir --windowed --name=AugmentCode-Free --add-data="config;config" --add-data="languages;languages" --hidden-import=PyQt6.QtCore --hidden-import=PyQt6.QtGui --hidden-import=PyQt6.QtWidgets --hidden-import=sqlite3 main.py

    - name: Build executable (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        pyinstaller --onedir --windowed --name=AugmentCode-Free --add-data="config:config" --add-data="languages:languages" --hidden-import=PyQt6.QtCore --hidden-import=PyQt6.QtGui --hidden-import=PyQt6.QtWidgets --hidden-import=sqlite3 main.py

    - name: Create release package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        if (!(Test-Path "release")) { New-Item -ItemType Directory -Path "release" }
        if (Test-Path "release\AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}") { Remove-Item -Recurse -Force "release\AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}" }
        xcopy /E /I dist\AugmentCode-Free release\AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}
        if (Test-Path "README.md") { Copy-Item "README.md" "release\" }
        if (Test-Path "LICENSE") { Copy-Item "LICENSE" "release\" }

    - name: Create release package (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p release
        rm -rf release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}*
        if [ -d "dist/AugmentCode-Free.app" ]; then
          cp -r dist/AugmentCode-Free.app release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.app
        fi
        cp -r dist/AugmentCode-Free release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}
        cp README.md LICENSE release/ || true

    - name: Create release package (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p release
        rm -rf release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}
        cp -r dist/AugmentCode-Free release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}
        cp README.md LICENSE release/ || true

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        powershell Compress-Archive -Path release\AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }} -DestinationPath AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.zip

    - name: Create archive (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        tar -czf AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz -C release AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}
        if [ -d "release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.app" ]; then
          tar -czf AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.app.tar.gz -C release AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}.app
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AugmentCode-Free-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          *.zip
          *.tar.gz
          release/

    - name: Test executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        release\AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}\AugmentCode-Free.exe --help || echo "GUI application, no help output expected"

    - name: Test executable (macOS/Linux)
      if: matrix.os != 'windows-latest'
      run: |
        chmod +x release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}/AugmentCode-Free
        release/AugmentCode-Free-v2.0.0-${{ matrix.platform }}-${{ matrix.arch }}/AugmentCode-Free --help || echo "GUI application, no help output expected"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: List downloaded files
      run: |
        echo "📁 Downloaded artifacts structure:"
        ls -la
        echo "📁 Artifact directories:"
        find . -type d -name "*AugmentCode-Free*"
        echo "📁 All files:"
        find . -name "*.zip" -o -name "*.tar.gz"
        echo "📊 File count:"
        find . -name "*.zip" | wc -l
        find . -name "*.tar.gz" | wc -l

    - name: Organize release files
      run: |
        mkdir -p release-files
        # Copy unique files to release directory
        find . -name "AugmentCode-Free-v2.0.0-windows-x64.zip" -exec cp {} release-files/ \;
        find . -name "AugmentCode-Free-v2.0.0-linux-x64.tar.gz" -exec cp {} release-files/ \;
        # For macOS, only copy one instance of each file
        find . -name "AugmentCode-Free-v2.0.0-macos-arm64.tar.gz" | head -1 | xargs -I {} cp {} release-files/
        find . -name "AugmentCode-Free-v2.0.0-macos-arm64.app.tar.gz" | head -1 | xargs -I {} cp {} release-files/
        echo "📦 Release files prepared:"
        ls -la release-files/

    - name: Generate version
      id: version
      run: |
        VERSION="v2.0.0-$(date +%Y%m%d-%H%M%S)"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: "AugmentCode-Free ${{ steps.version.outputs.version }}"
        body: |
          🎉 **AugmentCode-Free 自动构建发布**

          ✨ **主要功能:**
          - 智能路径自动搜索：支持非默认安装位置的IDE检测
          - 增强清理引擎：4种清理模式(database_only/file_only/hybrid/aggressive)
          - 跨平台支持：Windows、macOS、Linux全平台兼容
          - 用户界面优化：隐藏补丁功能，简化操作流程

          🔧 **技术改进:**
          - 修复macOS Cursor路径配置问题
          - 优化Windows多路径扩展检测
          - 修复Ubuntu 24.04包名兼容性
          - 修复PowerShell语法错误
          - 增强错误处理和用户反馈

          📦 **支持平台:**
          - Windows x64 (可执行文件 + ZIP)
          - macOS ARM64 (可执行文件 + 应用程序包 + TAR.GZ)
          - Linux x64 (可执行文件 + TAR.GZ)

          🚀 **构建信息:**
          - 构建时间: $(date)
          - 提交: ${{ github.sha }}
          - 分支: ${{ github.ref_name }}
        files: release-files/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
